<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="6D`b3lk/Sg::vnDTg_$5" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id=":?(rE]|(`^v.3fQ?wt88"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace TelloControl {" line1="    // Initialize the variables" line2="    let telloIP = &quot;192.168.10.1&quot;;" line3="    let commandPort = 8889;" line4="" line5="    // Function to read and display response on the micro:bit" line6="    function readResponse(): void {" line7="        let response = serial.readString();" line8="        if (response.includes(&quot;OK&quot;)) {" line9="            basic.showString(&quot;Connected&quot;);" line10="        } else {" line11="            basic.showString(&quot;Failed&quot;);" line12="            basic.showString(response); // Display the actual error" line13="        }" line14="    }" line15="" line16="    function sendCommandToTello(command: string): void {" line17="        // Assuming you're already connected to Tello WiFi, have set up UDP connection and initialisd the Tello into SDK mode" line18="        sendAT(`AT+CIPSEND=${command.length}`, 500);  // Send command length and command" line19="        serial.writeString(command + &quot;\r\n&quot;); // Send the actual command" line20="        basic.pause(500);" line21="        readResponse(); // Display Tello's response" line22="    }" line23="" line24="    function sendAT(command: string, wait: number = 0) {" line25="        serial.writeString(`${command}\u000D\u000A`);" line26="        basic.pause(wait);" line27="    }" line28="" line29="    // Function to initialize ESP8266 and redirect serial communication" line30="    //% block=&quot;initialize ESP8266 with TX %tx| RX %rx&quot;" line31="    //% tx.defl=SerialPin.P8" line32="    //% rx.defl=SerialPin.P12" line33="    export function initESP8266(tx: SerialPin, rx: SerialPin): void {" line34="        serial.redirect(tx, rx, BaudRate.BaudRate115200); // Redirect TX and RX" line35="        basic.pause(100);" line36="        serial.setTxBufferSize(128);" line37="        serial.setRxBufferSize(128);" line38="" line39="        sendAT(&quot;AT+RST&quot;, 2000); // Reset the ESP8266" line40="        sendAT(&quot;AT+CWMODE=1&quot;, 500); // Set ESP8266 to Station Mode (STA mode)" line41="        sendAT(&quot;AT+CWQAP&quot;, 1000); // Disconnect from current Wi-Fi" line42="        sendAT(&quot;AT&quot;, 500); // Check if ESP8266 responds with &quot;OK&quot;" line43="    }" line44="" line45="    //% block=&quot;Flip&quot;" line46="    export function flip(): void {" line47="        sendCommandToTello(&quot;flip b&quot;);" line48="    }" line49="    //% block=&quot;Emergency Stop&quot;" line50="    export function emergency(): void {" line51="        sendCommandToTello(&quot;emergency&quot;);" line52="    }" line53="    //% block=&quot;Move Right&quot;" line54="    export function right(): void {" line55="        sendCommandToTello(&quot;right&quot;);" line56="    }" line57="" line58="    //% block=&quot;Move Left&quot;" line59="    export function left(): void {" line60="        sendCommandToTello(&quot;left&quot;);" line61="    }" line62="" line63="    //% block=&quot;Move Back&quot;" line64="    export function back(): void {" line65="        sendCommandToTello(&quot;back&quot;);" line66="    }" line67="    //% block=&quot;Move Forward&quot;" line68="    export function forward(): void {" line69="        sendCommandToTello(&quot;forward&quot;);" line70="    }" line71="" line72="    //% block=&quot;Land&quot;" line73="    export function land(): void {" line74="        sendCommandToTello(&quot;land&quot;);" line75="    }" line76="" line77="    //% block=&quot;Takeoff&quot;" line78="    export function takeOff(): void {" line79="        sendCommandToTello(&quot;takeoff&quot;);" line80="    }" line81="    // Seting up UDP connection (2) and initialise the Tello into SDK mode (3)" line82="    //% block=&quot;Initialise ESP and Tello connection&quot;" line83="    export function setupUDPConnection(): void {" line84="        sendAT(`AT+CIPSTART=&quot;UDP&quot;,&quot;${telloIP}&quot;,${commandPort}`, 500);" line85="        basic.pause(500); // Allow some time for connection setup" line86="        sendCommandToTello(&quot;command&quot;);" line87="        basic.pause(500); // Allow some time for connection setup" line88="    }" line89="" line90="    // Function to connect to Tello Wi-Fi (1)" line91="    //% block=&quot;Connect to Tello Wi-Fi SSID %ssid&quot;" line92="    export function connectToWiFi(ssid: string): void {" line93="        sendAT(`AT+CWJAP=&quot;${ssid}&quot;,&quot;&quot;`, 5000); // No password is required" line94="        readResponse(); // Display response on micro:bit" line95="    }" line96="}" numlines="97"></mutation></block></statement></block></xml>